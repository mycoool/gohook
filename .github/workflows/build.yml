name: build
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      
      - name: Check out code
        uses: actions/checkout@v4
        with:
          # Fetch all history so that `git` can determine the correct version
          fetch-depth: 0

      - name: Install UI dependencies
        run: (cd ui && yarn)

      - name: Build UI
        run: make build-js

      - name: Run linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest 
          args: --timeout=5m
      
      - name: Download Go modules
        run: go mod download

      - name: Run tests
        run: make test

      - name: Extract version from tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

      - name: Set release build flags
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          export LD_FLAGS="-w -s -X github.com/mycoool/gohook/version.Version=$VERSION -X github.com/mycoool/gohook/version.BuildDate=$(date "+%F-%T") -X github.com/mycoool/gohook/version.Commit=$(git rev-parse --verify HEAD)"
          echo "LD_FLAGS=$LD_FLAGS" >> $GITHUB_ENV

      - name: Build application for release
        if: startsWith(github.ref, 'refs/tags/v')
        run: make build

      - name: Package application for release
        if: startsWith(github.ref, 'refs/tags/v')
        run: make package-zip

      - name: Upload release assets
        if: startsWith(github.ref, 'refs/tags/v')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/*.zip
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
