name: build
on:
  push:
    tags:
      - 'v*'  # 只在 v 开头的标签时触发
  pull_request:
    branches:
      - main  # 在 main 分支的 PR 时触发

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x

      - name: Check out code
        uses: actions/checkout@v4
        with:
          # Fetch all history so that `git` can determine the correct version
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: ui/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('ui/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install UI dependencies
        if: startsWith(github.ref, 'refs/tags/v')
        run: cd ui && yarn install --frozen-lockfile

      - name: Build UI
        if: startsWith(github.ref, 'refs/tags/v')
        run: make build-js

      - name: Download Go modules
        run: go mod download
      
      - name: Run linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest 
          args: --timeout=5m

      - name: Extract version from tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Building version: $VERSION"

      - name: Set release build flags
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          export LD_FLAGS="-w -s \
            -X github.com/mycoool/gohook/version.Version=$VERSION \
            -X github.com/mycoool/gohook/version.BuildDate=$(date "+%F-%T") \
            -X github.com/mycoool/gohook/version.Commit=$(git rev-parse --verify HEAD)"
          echo "LD_FLAGS=$LD_FLAGS" >> $GITHUB_ENV

      - name: Build application for release
        if: startsWith(github.ref, 'refs/tags/v')
        run: make build

      - name: Package application for release
        if: startsWith(github.ref, 'refs/tags/v')
        run: make package-zip

      - name: Upload release assets
        if: startsWith(github.ref, 'refs/tags/v')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/*.zip
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
