{
  "common": {
    "ok": "OK",
    "cancel": "Cancel",
    "confirm": "Confirm",
    "delete": "Delete",
    "edit": "Edit",
    "save": "Save",
    "add": "Add",
    "refresh": "Refresh",
    "search": "Search",
    "loading": "Loading...",
    "success": "Success",
    "error": "Error",
    "warning": "Warning",
    "info": "Info",
    "yes": "Yes",
    "no": "No",
    "retry": "Retry",
    "status": "Status",
    "actions": "Actions"
  },
  "nav": {
    "versions": "Versions",
    "hooks": "Hooks",
    "plugins": "Plugins", 
    "users": "Users",
    "settings": "Settings",
    "logout": "Logout",
    "menu": "Menu"
  },
  "auth": {
    "login": "Login",
    "logout": "Logout",
    "username": "Username",
    "password": "Password",
    "register": "Register",
    "loginFailed": "Login Failed",
    "invalidCredentials": "Invalid username or password"
  },
  "version": {
    "title": "Version Management",
    "addProject": "Add Project",
    "projectName": "Project Name",
    "projectPath": "Project Path",
    "projectDescription": "Project Description",
    "currentBranch": "Current Branch",
    "currentTag": "Current Tag",
    "switchBranch": "Switch Branch",
    "switchTag": "Switch Tag",
    "branches": "Branches",
    "tags": "Tags",
    "initGit": "Initialize Git",
    "setRemote": "Set Remote",
    "remoteUrl": "Remote URL",
    "gitRepo": "Git Repository",
    "nonGitProject": "Non-Git Project",
    "branchMode": "Branch Mode",
    "tagMode": "Tag Mode",
    "active": "Active",
    "inactive": "Inactive",
    "nonGit": "Non-Git",
    "reloadConfig": "Reload Config",
    "confirmDelete": "Confirm Delete Project",
    "confirmDeleteText": "Are you sure you want to delete project \"{{name}}\"? This action cannot be undone.",
    "confirmInitGit": "Initialize Git Repository",
    "confirmInitGitText": "Are you sure you want to initialize Git repository for project \"{{name}}\"?",
    "setRemoteText": "Set remote repository URL for project {{name}}:",
    "projectNamePlaceholder": "Unique identifier for the project",
    "projectPathPlaceholder": "Absolute path of the project on server",
    "projectDescriptionPlaceholder": "Detailed description of the project (optional)",
    "remoteUrlPlaceholder": "Enter complete Git remote repository URL",
    "addingProject": "Adding...",
    "projectAdded": "Project added successfully",
    "projectDeleted": "Project deleted successfully",
    "branchSwitched": "Branch switched successfully",
    "tagSwitched": "Tag switched successfully",
    "gitInitialized": "Git repository initialized successfully",
    "remoteSet": "Remote repository set successfully",
    "unknownBranch": "Unknown branch",
    "unknownTag": "Unknown tag",
    "noVersionInfo": "No version info",
    "loadingCurrentRemote": "Loading current remote URL...",
    "currentRemoteUrl": "Current remote repository URL",
    "noCurrentRemote": "No remote repository URL configured"
  },
  "hook": {
    "title": "Hook Management",
    "name": "Name",
    "description": "Description",
    "command": "Command",
    "workingDir": "Working Directory",
    "httpMethods": "HTTP Methods",
    "triggerRule": "Trigger Rules",
    "lastUsed": "Last Used",
    "status": "Status",
    "triggerHook": "Trigger Hook",
    "deleteHook": "Delete Hook",
    "confirmDelete": "Confirm Delete Hook",
    "confirmDeleteText": "Are you sure you want to delete hook \"{{name}}\"?",
    "hookTriggered": "Hook triggered successfully",
    "hookFailed": "Hook execution failed",
    "reloadConfig": "Reload Config"
  },
  "message": {
    "title": "Real-time Messages",
    "clearMessages": "Clear Messages",
    "sendHeartbeat": "Send Heartbeat",
    "noMessages": "No messages",
    "hookTriggered": "Hook Execution",
    "versionSwitched": "Version Switch",
    "projectManaged": "Project Management",
    "executionSuccess": "Execution successful",
    "executionFailed": "Execution failed",
    "branchSwitchSuccess": "Branch switch successful",
    "branchSwitchFailed": "Branch switch failed", 
    "tagSwitchSuccess": "Tag switch successful",
    "tagSwitchFailed": "Tag switch failed",
    "projectAddSuccess": "Project add successful",
    "projectAddFailed": "Project add failed",
    "projectDeleteSuccess": "Project delete successful",
    "projectDeleteFailed": "Project delete failed",
    "unknownError": "Unknown error"
  },
  "user": {
    "title": "User Management",
    "addUser": "Add User",
    "editUser": "Edit User",
    "deleteUser": "Delete User",
    "username": "Username",
    "password": "Password",
    "confirmPassword": "Confirm Password",
    "admin": "Administrator",
    "userCreated": "User created successfully",
    "userUpdated": "User updated successfully",
    "userDeleted": "User deleted successfully"
  },
  "validation": {
    "required": "This field is required",
    "invalidEmail": "Please enter a valid email address",
    "invalidUrl": "Please enter a valid URL",
    "passwordMismatch": "Passwords do not match",
    "invalidPath": "Path does not exist",
    "duplicateName": "Name already exists",
    "invalidFormat": "Invalid format"
  },
  "errors": {
    "networkError": "Network connection error",
    "serverError": "Server error",
    "unauthorized": "Unauthorized access",
    "forbidden": "Access forbidden",
    "notFound": "Resource not found",
    "configLoadFailed": "Failed to load configuration file",
    "projectNotFound": "Project not found",
    "pathNotExists": "Specified path does not exist",
    "saveConfigFailed": "Failed to save configuration",
    "gitInitFailed": "Git repository initialization failed",
    "branchSwitchFailed": "Branch switch failed",
    "tagSwitchFailed": "Tag switch failed",
    "hookExecutionFailed": "Hook execution failed",
    "permissionDenied": "Permission denied"
  }
} 