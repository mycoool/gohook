{
  "common": {
    "ok": "OK",
    "cancel": "Cancel",
    "confirm": "Confirm",
    "delete": "Delete",
    "edit": "Edit",
    "save": "Save",
    "add": "Add",
    "refresh": "Refresh",
    "search": "Search",
    "loading": "Loading...",
    "success": "Success",
    "error": "Error",
    "warning": "Warning",
    "info": "Info",
    "yes": "Yes",
    "no": "No",
    "retry": "Retry",
    "status": "Status",
    "actions": "Actions"
  },
  "nav": {
    "versions": "Versions",
    "hooks": "WebHooks",
    "plugins": "Plugins",
    "logs": "Logs",
    "users": "Users",
    "settings": "Settings",
    "logout": "Logout",
    "menu": "Menu"
  },
  "auth": {
    "login": "Login",
    "logout": "Logout",
    "username": "Username",
    "password": "Password",
    "register": "Register",
    "loginFailed": "Login Failed",
    "invalidCredentials": "Invalid username or password",
    "logging_in": "Logging in..."
  },
  "version": {
    "title": "Version Management",
    "addProject": "Add Project",
    "editProject": "Edit Project",
    "projectName": "Project Name",
    "projectPath": "Project Path",
    "projectDescription": "Project Description",
    "currentBranch": "Current Branch",
    "currentTag": "Current Tag",
    "switchBranch": "Switch Branch",
    "switchTag": "Switch Tag",
    "branches": "Branches",
    "tags": "Tags",
    "initGit": "Initialize Git",
    "setRemote": "Set Remote",
    "remoteUrl": "Remote URL",
    "gitRepo": "Git Repository",
    "nonGitProject": "Non-Git Project",
    "branchMode": "Branch Mode",
    "tagMode": "Tag Mode",
    "branch": "Branch",
    "tag": "Tag",
    "active": "Active",
    "inactive": "Inactive",
    "nonGit": "Non-Git",
    "reloadConfig": "Reload Config",
    "confirmDelete": "Confirm Delete Project",
    "confirmDeleteText": "Are you sure you want to delete project \"{{name}}\"? This action cannot be undone.",
    "confirmInitGit": "Initialize Git Repository",
    "confirmInitGitText": "Are you sure you want to initialize Git repository for project \"{{name}}\"?",
    "setRemoteText": "Set remote repository URL for project {{name}}:",
    "projectNamePlaceholder": "Unique identifier for the project",
    "projectPathPlaceholder": "Absolute path of the project on server",
    "projectDescriptionPlaceholder": "Detailed description of the project (optional)",
    "remoteUrlPlaceholder": "Enter complete Git remote repository URL",
    "addingProject": "Adding...",
    "editingProject": "Editing...",
    "projectAdded": "Project added successfully",
    "projectEdited": "Project edited successfully",
    "projectDeleted": "Project deleted successfully",
    "branchSwitched": "Branch switched successfully",
    "tagSwitched": "Tag switched successfully",
    "gitInitialized": "Git repository initialized successfully",
    "remoteSet": "Remote repository set successfully",
    "unknownBranch": "Unknown branch",
    "unknownTag": "Unknown tag",
    "noVersionInfo": "No version info",
    "lastCommit": "Last Commit",
    "loadingCurrentRemote": "Loading current remote URL...",
    "currentRemoteUrl": "Current remote repository URL",
    "noCurrentRemote": "No remote repository URL configured",
    "gitStatus": "Git Status",
    "hookStatus": "Hook Status"
  },
  "githook": {
    "title": "GitHook Configuration",
    "enabled": "Enabled",
    "disabled": "Disabled",
    "enable": "Enable GitHook",
    "enableDescription": "When enabled, Git repository webhooks will automatically trigger code pull and deployment",
    "runMode": "Run Mode",
    "branchMode": "Branch Mode",
    "tagMode": "Tag Mode",
    "branchModeDescription": "Trigger deployment when specified branch has new commits",
    "tagModeDescription": "Trigger deployment when new tags are created",
    "branchSettings": "Branch Settings",
    "anyBranch": "Any branch (switch to whichever branch triggers the webhook)",
    "specificBranch": "Specific branch",
    "branchName": "Branch Name",
    "branchNamePlaceholder": "e.g.: main, develop, master",
    "anyBranchDescription": "Any branch mode: automatically switch to the corresponding branch and pull latest code when webhook is triggered",
    "specificBranchDescription": "Specific branch mode: only webhooks from {{branch}} branch will trigger deployment",
    "webhookPassword": "Webhook Password",
    "webhookPasswordPlaceholder": "Set webhook verification password (optional)",
    "webhookPasswordDescription": "When set, webhook requests must include this password to trigger deployment. Use the buttons on the right to generate random password or copy current password.",
    "webhookUrl": "Webhook URL",
    "webhookUrlDescription": "Please configure this URL in your Git repository's webhook settings",
    "copyPassword": "Copy Password",
    "generatePassword": "Generate Random Password",
    "copyUrl": "Copy URL",
    "passwordCopied": "Password copied to clipboard",
    "urlCopied": "Webhook URL copied to clipboard",
    "copyFailed": "Copy failed",
    "saving": "Saving...",
    "notEnabled": "Not Enabled",
    "anyBranchShort": "Any"
  },
  "hook": {
    "title": "Hook Management",
    "name": "Name",
    "description": "Description",
    "command": "Command",
    "workingDir": "Working Directory",
    "httpMethods": "HTTP Methods",
    "triggerRule": "Trigger Rules",
    "lastUsed": "Last Used",
    "status": "Status",
    "triggerHook": "Trigger Hook",
    "deleteHook": "Delete Hook",
    "confirmDelete": "Confirm Delete Hook",
    "confirmDeleteText": "Are you sure you want to delete hook \"{{name}}\"?",
    "hookTriggered": "Hook triggered successfully",
    "hookFailed": "Hook execution failed",
    "reloadConfig": "Reload Config"
  },
  "message": {
    "title": "Real-time Messages",
    "clearMessages": "Clear Messages",
    "sendHeartbeat": "Send Heartbeat",
    "noMessages": "No messages",
    "reachedEnd": "You've reached the end",
    "confirmClearAll": "Are you sure you want to clear all messages?",
    "hookTriggered": "Hook Execution",
    "versionSwitched": "Version Switch",
    "projectManaged": "Project Management",
    "executionSuccess": "Execution successful",
    "executionFailed": "Execution failed",
    "branchSwitchSuccess": "Branch switch successful",
    "branchSwitchFailed": "Branch switch failed", 
    "tagSwitchSuccess": "Tag switch successful",
    "tagSwitchFailed": "Tag switch failed",
    "projectAddSuccess": "Project add successful",
    "projectAddFailed": "Project add failed",
    "projectDeleteSuccess": "Project delete successful",
    "projectDeleteFailed": "Project delete failed",
    "unknownError": "Unknown error"
  },
  "user": {
    "title": "User Management",
    "addUser": "Add User",
    "editUser": "Edit User",
    "deleteUser": "Delete User",
    "username": "Username",
    "password": "Password",
    "oldPassword": "Current Password",
    "newPassword": "New Password",
    "confirmPassword": "Confirm Password",
    "admin": "Administrator",
    "role": "Role",
    "userCreated": "User created successfully",
    "userUpdated": "User updated successfully",
    "userDeleted": "User deleted successfully",
    "confirmDeleteText": "Are you sure you want to delete user \"{{name}}\"?",
    "editUserTitle": "Edit {{name}}",
    "addUserTitle": "Add User",
    "changePasswordTitle": "Change Password",
    "nameLabel": "Username *",
    "passwordLabel": "Password *",
    "passwordEditLabel": "Password (leave empty if no change)",
    "oldPasswordLabel": "Current Password *",
    "newPasswordLabel": "New Password *",
    "confirmPasswordLabel": "Confirm New Password *",
    "adminRightsLabel": "Has administrator rights",
    "nameRequired": "Username is required",
    "passwordRequired": "Password is required",
    "passwordMismatch": "Passwords do not match",
    "changePassword": "Change Password",
    "create": "Create",
    "save": "Save",
    "normalUser": "Normal User"
  },
  "environment": {
    "development": "Development",
    "testing": "Testing",
    "production": "Production",
    "unknown": "Unknown"
  },
  "validation": {
    "required": "This field is required",
    "invalidEmail": "Please enter a valid email address",
    "invalidUrl": "Please enter a valid URL",
    "passwordMismatch": "Passwords do not match",
    "invalidPath": "Path does not exist",
    "duplicateName": "Name already exists",
    "invalidFormat": "Invalid format"
  },

  "plugin": {
    "title": "Plugin Management",
    "name": "Plugin Name",
    "author": "Author",
    "version": "Version",
    "description": "Description",
    "capabilities": "Capabilities",
    "enabled": "Enabled",
    "disabled": "Disabled",
    "modulePath": "Module Path",
    "website": "Website",
    "license": "License",
    "enablePlugin": "Enable Plugin",
    "disablePlugin": "Disable Plugin",
    "confirmEnable": "Confirm Enable Plugin",
    "confirmDisable": "Confirm Disable Plugin",
    "confirmEnableText": "Are you sure you want to enable plugin \"{{name}}\"?",
    "confirmDisableText": "Are you sure you want to disable plugin \"{{name}}\"?",
    "pluginEnabled": "Plugin enabled successfully",
    "pluginDisabled": "Plugin disabled successfully",
    "noPlugins": "No plugins available",
    "loadingPlugins": "Loading plugins..."
  },
  "layout": {
    "appTitle": "GoHook Management System",
    "toggleMenu": "Toggle Menu",
    "userMenu": "User Menu",
    "languageSwitch": "Language Switch",
    "chinese": "中文",
    "english": "English",
    "connectionError": "Connection Error",
    "connectionRestored": "Connection Restored",
    "sidebar": "Sidebar",
    "mainContent": "Main Content"
  },
  "dialog": {
    "confirmTitle": "Confirm Action",
    "confirmText": "Are you sure you want to perform this action?",
    "closeDialog": "Close Dialog"
  },
  "form": {
    "requiredField": "Required field",
    "invalidInput": "Invalid input",
    "saveChanges": "Save Changes",
    "discardChanges": "Discard Changes",
    "selectFile": "Select File",
    "uploadFile": "Upload File",
    "fileName": "File Name",
    "fileSize": "File Size"
  },
  "errors": {
    "networkError": "Network connection error",
    "serverError": "Server error",
    "unauthorized": "Unauthorized access",
    "forbidden": "Access forbidden",
    "notFound": "Resource not found",
    "configLoadFailed": "Failed to load configuration file",
    "projectNotFound": "Project not found",
    "pathNotExists": "Specified path does not exist",
    "saveConfigFailed": "Failed to save configuration",
    "gitInitFailed": "Git repository initialization failed",
    "branchSwitchFailed": "Branch switch failed",
    "tagSwitchFailed": "Tag switch failed",
    "hookExecutionFailed": "Hook execution failed",
    "permissionDenied": "Permission denied"
  },
  "logs": {
    "title": "Log Management",
    "allLogs": "All Logs",
    "hookLogs": "Hook Logs",
    "systemLogs": "System Logs",
    "userLogs": "User Activity Logs",
    "projectLogs": "Project Activity Logs",
    "filterByType": "Filter by Type",
    "filterByDate": "Filter by Date",
    "filterByUser": "Filter by User",
    "filterByProject": "Filter by Project",
    "level": "Level",
    "category": "Category",
    "message": "Message",
    "timestamp": "Timestamp",
    "user": "User",
    "project": "Project",
    "hookName": "Hook Name",
    "hookType": "Hook Type",
    "method": "Method",
    "remoteAddr": "Remote Address",
    "success": "Success",
    "failed": "Failed",
    "duration": "Duration",
    "output": "Output",
    "error": "Error",
    "userAgent": "User Agent",
    "action": "Action",
    "resource": "Resource",
    "description": "Description",
    "oldValue": "Old Value",
    "newValue": "New Value",
    "commitHash": "Commit Hash",
    "ipAddress": "IP Address",
    "details": "Details",
    "clearLogs": "Clear Logs",
    "cleanupOlderThan": "Cleanup logs older than",
    "days": "days",
    "confirmCleanup": "Confirm Log Cleanup",
    "confirmCleanupText": "Are you sure you want to cleanup logs older than {{days}} days? This action cannot be undone.",
    "logsCleared": "Logs cleared successfully",
    "loadMore": "Load More",
    "noMoreLogs": "No more logs",
    "totalItems": "Total {{count}} records",
    "pageSize": "Items per page",
    "items": "items",
    "searchPlaceholder": "Search log content...",
    "exportLogs": "Export Logs",
    "refreshLogs": "Refresh Logs",
    "autoRefresh": "Auto Refresh",
    "refreshInterval": "Refresh Interval",
    "seconds": "seconds",
    "logId": "Log ID",
    "logLevel": {
      "info": "Info",
      "warn": "Warning",
      "error": "Error",
      "debug": "Debug"
    },
    "logCategory": {
      "system": "System",
      "user": "User",
      "hook": "Hook",
      "project": "Project",
      "auth": "Auth",
      "api": "API",
      "database": "Database"
    },
    "statusFilter": {
      "all": "All",
      "success": "Success",
      "failed": "Failed"
    },
    "timeRange": {
      "all": "All Time",
      "today": "Today",
      "yesterday": "Yesterday",
      "lastWeek": "Last Week",
      "lastMonth": "Last Month",
      "custom": "Custom"
    },
    "startDate": "Start Date",
    "endDate": "End Date"
  }
} 